// @generated by protoc-gen-es v2.2.2
// @generated from file com/stakewiz/api/v1/epoch.proto (package com.stakewiz.api.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file com/stakewiz/api/v1/epoch.proto.
 */
export declare const file_com_stakewiz_api_v1_epoch: GenFile;

/**
 * The request message for CurrentEpoch
 *
 * @generated from message com.stakewiz.api.v1.GetCurrentEpochRequest
 */
export declare type GetCurrentEpochRequest = Message<"com.stakewiz.api.v1.GetCurrentEpochRequest"> & {
};

/**
 * Describes the message com.stakewiz.api.v1.GetCurrentEpochRequest.
 * Use `create(GetCurrentEpochRequestSchema)` to create a new message.
 */
export declare const GetCurrentEpochRequestSchema: GenMessage<GetCurrentEpochRequest>;

/**
 * The request message for CurrentEpoch
 *
 * @generated from message com.stakewiz.api.v1.GetHistoricalEpochRequest
 */
export declare type GetHistoricalEpochRequest = Message<"com.stakewiz.api.v1.GetHistoricalEpochRequest"> & {
  /**
   * Epoch number.
   *
   * @generated from field: int32 epoch = 1;
   */
  epoch: number;
};

/**
 * Describes the message com.stakewiz.api.v1.GetHistoricalEpochRequest.
 * Use `create(GetHistoricalEpochRequestSchema)` to create a new message.
 */
export declare const GetHistoricalEpochRequestSchema: GenMessage<GetHistoricalEpochRequest>;

/**
 * The request message for ListHistoricalEpochs
 *
 * @generated from message com.stakewiz.api.v1.ListHistoricalEpochsRequest
 */
export declare type ListHistoricalEpochsRequest = Message<"com.stakewiz.api.v1.ListHistoricalEpochsRequest"> & {
};

/**
 * Describes the message com.stakewiz.api.v1.ListHistoricalEpochsRequest.
 * Use `create(ListHistoricalEpochsRequestSchema)` to create a new message.
 */
export declare const ListHistoricalEpochsRequestSchema: GenMessage<ListHistoricalEpochsRequest>;

/**
 * The response message for ListHistoricalEpochs
 *
 * @generated from message com.stakewiz.api.v1.ListHistoricalEpochsResponse
 */
export declare type ListHistoricalEpochsResponse = Message<"com.stakewiz.api.v1.ListHistoricalEpochsResponse"> & {
  /**
   * @generated from field: repeated com.stakewiz.api.v1.HistoricalEpoch epoch = 1;
   */
  epoch: HistoricalEpoch[];
};

/**
 * Describes the message com.stakewiz.api.v1.ListHistoricalEpochsResponse.
 * Use `create(ListHistoricalEpochsResponseSchema)` to create a new message.
 */
export declare const ListHistoricalEpochsResponseSchema: GenMessage<ListHistoricalEpochsResponse>;

/**
 * HistoricalEpoch is the information of a previous Epoch
 *
 * @generated from message com.stakewiz.api.v1.HistoricalEpoch
 */
export declare type HistoricalEpoch = Message<"com.stakewiz.api.v1.HistoricalEpoch"> & {
  /**
   * Epoch number.
   *
   * @generated from field: int32 epoch = 1;
   */
  epoch: number;

  /**
   * Start time of the epoch.
   *
   * @generated from field: string start = 2;
   */
  start: string;

  /**
   * End time of the epoch.
   *
   * @generated from field: string end = 3;
   */
  end: string;

  /**
   * Duration of the epoch in seconds.
   *
   * @generated from field: int64 duration_seconds = 4 [json_name = "duration_seconds"];
   */
  durationSeconds: bigint;
};

/**
 * Describes the message com.stakewiz.api.v1.HistoricalEpoch.
 * Use `create(HistoricalEpochSchema)` to create a new message.
 */
export declare const HistoricalEpochSchema: GenMessage<HistoricalEpoch>;

/**
 * @generated from message com.stakewiz.api.v1.Epoch
 */
export declare type Epoch = Message<"com.stakewiz.api.v1.Epoch"> & {
  /**
   * Current epoch number.
   *
   * @generated from field: int32 epoch = 1;
   */
  epoch: number;

  /**
   * Starting slot of the current epoch.
   *
   * @generated from field: int64 start_slot = 2 [json_name = "start_slot"];
   */
  startSlot: bigint;

  /**
   * Start time of the current epoch.
   *
   * @generated from field: string start_time = 3 [json_name = "start_time"];
   */
  startTime: string;

  /**
   * Current slot height within the epoch.
   *
   * @generated from field: int64 slot_height = 4 [json_name = "slot_height"];
   */
  slotHeight: bigint;

  /**
   * Total duration of the epoch in seconds.
   *
   * @generated from field: int64 duration_seconds = 5 [json_name = "duration_seconds"];
   */
  durationSeconds: bigint;

  /**
   * Elapsed seconds since the start of the epoch.
   *
   * @generated from field: int64 elapsed_seconds = 6 [json_name = "elapsed_seconds"];
   */
  elapsedSeconds: bigint;

  /**
   * Remaining seconds in the epoch.
   *
   * @generated from field: int64 remaining_seconds = 7 [json_name = "remaining_seconds"];
   */
  remainingSeconds: bigint;

  /**
   * Estimated epochs per year.
   *
   * @generated from field: double epochs_per_year = 8 [json_name = "epochs_per_year"];
   */
  epochsPerYear: number;
};

/**
 * Describes the message com.stakewiz.api.v1.Epoch.
 * Use `create(EpochSchema)` to create a new message.
 */
export declare const EpochSchema: GenMessage<Epoch>;

/**
 * The Epoch service definition.
 *
 * @generated from service com.stakewiz.api.v1.EpochService
 */
export declare const EpochService: GenService<{
  /**
   * Get the current epoch.
   *
   * @generated from rpc com.stakewiz.api.v1.EpochService.GetCurrentEpoch
   */
  getCurrentEpoch: {
    methodKind: "unary";
    input: typeof GetCurrentEpochRequestSchema;
    output: typeof EpochSchema;
  },
  /**
   * Get the current epoch.
   *
   * @generated from rpc com.stakewiz.api.v1.EpochService.GetHistoricalEpoch
   */
  getHistoricalEpoch: {
    methodKind: "unary";
    input: typeof GetHistoricalEpochRequestSchema;
    output: typeof HistoricalEpochSchema;
  },
  /**
   * List all Epochs.
   *
   * @generated from rpc com.stakewiz.api.v1.EpochService.ListHistoricalEpochs
   */
  listHistoricalEpochs: {
    methodKind: "unary";
    input: typeof ListHistoricalEpochsRequestSchema;
    output: typeof ListHistoricalEpochsResponseSchema;
  },
}>;

